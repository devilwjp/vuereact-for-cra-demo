{"version":3,"sources":["vuereact-combined/options.js","vuereact-combined/vueRootInfo.js","vuereact-combined/applyReactInVue.js","vuereact-combined/applyReactRouterInVue.js","vuereact-combined/applyVueInReact.js","vuereact-combined/index.js","vuereact-combined/lazyVueInReact.js","router/index.js","App.js","serviceWorker.js","index.js"],"names":["originOptions","react","componentWrap","slotWrap","componentWrapAttrs","__use_react_component_wrap","style","all","slotWrapAttrs","__use_react_slot_wrap","vue","componentWrapHOC","VueComponentMountAt","nativeProps","portals","map","Portal","index","key","setOptions","newOptions","options","clone","params","unshift","Object","assign","apply","this","vueRootInfo","FunctionComponentWrap","props","Component","component","passedProps","ref","children","React","createReactContainer","wrapInstance","state","isSlots","setRef","bind","reactRef","vueWrapperRef","attrs","inheritAttrs","__fromReactSlot","render","createElement","__passedProps","$slots","$scopedSlots","i","hasOwnProperty","__slot","reactSlot","vueSlot","applyVueInReact","createSlot","__scopedSlot","default","refInfo","getPrototypeOf","Function","prototype","applyReact","catchVueRefs","newProps","$parent","$refs","displayName","name","applyReactInVue","__esModule","undefined","data","created","cleanVnodeStyleClass","$root","$options","router","store","slotsInit","methods","pushVuePortal","vuePortal","push","keys","forEach","console","log","updateLastVnodeData","vnode","lastVnodeData","formatStyle","staticStyle","class","Array","from","Set","formatClass","staticClass","join","$vnode","defineProperty","get","set","val","toCamelCase","replace","$","$1","toUpperCase","trim","split","reduce","prev","cur","length","newVal","v","getScopeSlot","slotFunction","scopedSlotFunction","createReactSlot","getSlot","context","reactFunction","vueFunction","mountReactComponent","update","$props","dataPassedProps","__passedPropsOn","on","__passedPropsSlots","__passedPropsScopedSlots","__passedPropsRest","normalSlots","mergeSlots","scopedSlots","mergeScopedSlots","$attrs","$listeners","lastNormalSlots","hashMap","$el","dataset","match","clearTimeout","updateTimer","setTimeout","reactInstance","setState","className","reactRootComponent","$redux","ReactReduxContext","ReduxContext","Provider","value","$nextTick","reactWrapperRef","container","parentInstance","parentReactWrapperRef","reactPortal","ReactDOM","createPortal","pushReactPortal","mounted","beforeDestroy","indexOf","splice","vueRef","unmountComponentAtNode","updated","watch","handler","deep","reactRouterInfo","updateReactRouterInVue","reactRouter","vueInstance","$data","applyReactRouterInVue","unsafePrefix","parseFloat","version","optionsName","REACT_ALL_HANDLERS","filterVueComponent","Vue","getOptions","GetReactRouterPropsCom","history","location","forwardRef","$reactRouter","nextProps","VueContainer","globalOptions","withRouter","RouterTargetComponent","VueComponentLoader","currentVueComponent","createVueInstance","vueComponentContainer","createVueComponentContainer","keyName","has","updateVueComponent","doVModel","parentVueWrapperRef","$destroy","$model","vueInstanceModelOption","prop","event","model","modelProp","oldFun","args","setter","$sync","syncValues","syncEvent","targetElement","VueContainerInstance","setVueInstance","instance","vueOptionsData","doSync","vueOptions","getNamespaceSlots","__namespaceSlots","tempSlots","slot","slotName","newSlot","child","getScopedSlots","__scopeSlots","tempScopedSlots","scopedSlot","getChildren","__vnode","$children","__passedPropsChildren","slots","filterNamedSlots","lastChildren","namedSlots","lastSlots","lastOn","nativeOn","toLowerCase","lastProps","mixinsPropsArray","mixinsPropsJson","componentOptions","mixins","optionProps","tempJson","filterAttrs","components","nextTick","targetId","Math","random","substr","id","_reactInternals","_reactInternalFiber","return","stateNode","MountingPortal","mountTo","slim","targetSlim","el","nextComponent","use_vue_wrapper","_Ctor","$forceUpdate","warn","asyncImport","Home","lazy","VueInReact1","VueInReact2","EleInReact","HelloWorld","then","mod","path","exact","fallback","wrappedComponentRef","App","to","renderRoutes","routers","Boolean","window","hostname","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"iVAEMA,EAAgB,CACpBC,MAAO,CACLC,cAAe,MACfC,SAAU,MACVC,mBAAoB,CAClBC,2BAA4B,GAC5BC,MAAO,CACLC,IAAK,UAGTC,cAAe,CACbC,sBAAuB,GACvBH,MAAO,CACLC,IAAK,WAIXG,IAAK,CAEHC,iBAAkB,SAACC,GAA2C,IAAtBC,EAAqB,uDAAP,GAEpD,OAAO,WAAkC,IAAD,yDAAJ,GAAI,IAArBC,eAAqB,MAAX,GAAW,EACtC,OAAQ,wBAASD,EAAcD,EAAqBE,EAAQC,KAAI,SAACC,EAAQC,GAAT,OAAmB,kBAACD,EAAD,CAAQE,IAAKD,UAGpGb,mBAAoB,CAClB,8BAA+B,GAC/BE,MAAO,CACLC,IAAK,UAGTC,cAAe,CACb,yBAA0B,GAC1BF,MAAO,CACLC,IAAK,YAMN,SAASY,IAGoB,IAHRC,EAGO,uDAHM,CACvCnB,MAAO,GACPS,IAAK,IACJW,EAAgC,uDAAtBrB,EAAesB,EAAO,uCAC5BF,EAAWV,MACdU,EAAWV,IAAM,IAEdU,EAAWnB,QACdmB,EAAWnB,MAAQ,IAErB,IAAMsB,EAAS,CAACF,EAAD,2BACVD,GADU,IAEbnB,MAAM,uCACDoB,EAAQpB,OACRmB,EAAWnB,OAFX,IAGHG,mBAAmB,2BACdiB,EAAQpB,MAAMG,oBACdgB,EAAWnB,MAAMG,oBAEtBI,cAAc,2BACTa,EAAQpB,MAAMO,eACdY,EAAWnB,MAAMO,iBAGxBE,IAAI,uCACCW,EAAQX,KACRU,EAAWV,KAFb,IAGDN,mBAAmB,2BACdiB,EAAQX,IAAIN,oBACZgB,EAAWV,IAAIN,oBAEpBI,cAAc,2BACTa,EAAQX,IAAIF,eACZY,EAAWV,IAAIF,oBAQxB,OAJIc,GACFC,EAAOC,QAAQ,IAGVC,OAAOC,OAAOC,MAAMC,KAAML,GAGpBvB,ICrFA6B,EADK,G,iHCQdC,E,kDACJ,WAAYC,GAAQ,uCACZA,G,0CAGR,WACE,IAAMC,EAAYJ,KAAKG,MAAME,UAC7B,EAA0BL,KAAKG,MAAMG,YAArBH,GAAhB,EAAQI,IAAR,kBACA,OAAO,kBAACH,EAAcD,EAAQH,KAAKG,MAAMK,c,GARTC,IAAML,WAWpCM,EAAuB,SAACN,EAAWX,EAASkB,GAArB,qEAe3B,WAAYR,GAAQ,IAAD,8BACjB,cAAMA,IAEDS,MAAL,2BACKT,GACCV,EAAQoB,QAAU,CAAEL,SAAUJ,GAAc,IAElD,EAAKU,OAAS,EAAKA,OAAOC,KAAZ,gBAPG,EAfQ,0CAK3B,SAAOR,GACAA,IAELI,EAAaK,SAAWT,EAIxBA,EAAIU,cAAgBN,KAZK,wBA0B3B,SAAWH,GACT,MAA4Bf,EAAQpB,MAAMO,cAAlCF,EAAR,EAAQA,MAAUwC,EAAlB,iBACA,MAAO,CACLC,cAAc,EACdC,iBAAiB,EACjBC,OAAQ,SAACC,GAAD,OAAmBA,EAAc7B,EAAQpB,MAAME,SAAU,CAAE2C,QAAOxC,SAAS8B,OA/B5D,kCAmC3B,WACOG,EAAaK,WAElBL,EAAaK,SAASC,cAAgB,KACtCN,EAAaK,SAAW,QAvCC,oBAoD3B,WACE,MAIIhB,KAAKY,MAHPJ,EADF,EACEA,SACqBe,EAFvB,EAEE,qBACGpB,EAHL,iBAMMqB,EAAS,GACTC,EAAe,GAErB,IAAK,IAAMC,KAAKvB,EACd,GAAKA,EAAMwB,eAAeD,IAAkB,MAAZvB,EAAMuB,GACtC,GAAIvB,EAAMuB,GAAGE,OAAQ,CACnB,GAAKzB,EAAMuB,GAAGG,UAOZ1B,EAAMuB,GAAKvB,EAAMuB,GAAGG,cAPG,CACvB,IAAMC,EAAU3B,EAAMuB,GAGtBvB,EAAMuB,GAAN,eAAgBK,EAAgB/B,KAAKgC,WAAW7B,EAAMuB,IAAvB,YAAC,eAAgCjC,GAAjC,IAA0CoB,SAAS,KAAQQ,UAC1FlB,EAAMuB,GAAGI,QAAUA,EAIrBN,EAAOE,GAAKvB,EAAMuB,QACTvB,EAAMuB,GAAGO,eAElB9B,EAAMuB,GAAKvB,EAAMuB,GAAG1B,KAAKgC,YACzBP,EAAaC,GAAKvB,EAAMuB,IAI5B,GAAgB,MAAZlB,EACF,GAAKA,EAASqB,UAKZrB,EAAWA,EAASqB,cALG,CACvB,IAAMC,EAAUtB,GAChBA,EAAQ,eAAQuB,EAAgB/B,KAAKgC,WAAWxB,GAAjB,YAAC,eAAgCf,GAAjC,IAA0CoB,SAAS,KAAQQ,WACjFS,QAAUA,EAKvBN,EAAOU,QAAU1B,EAEjBe,EAAa,uCAAQA,GAAkB,CAAEC,SAAQC,iBAApC,IAAoDjB,aACjE,IAAM2B,EAAU,GAIhB,GADAA,EAAQ5B,IAAMP,KAAKc,OACfrB,EAAQoB,QACV,OAAOb,KAAKY,MAAMJ,UAAYR,KAAKG,MAAMK,SAE3C,GAAKX,OAAOuC,eAAehC,KAAeiC,SAASC,YAAoC,kBAAdlC,GAA2BA,EAAUiB,SAAYkB,EAAWC,eACnI,OACI,kBAACpC,EAAD,iBAAeD,EAAf,CACiB,oBAAqBoB,GAAqBY,GACxD3B,GAIT,IAAMiC,EAAQ,2BAAQtC,GAAU,CAAE,oBAAqBoB,IACvD,OAAO,kBAAC,EAAD,eAAuBjB,YAAamC,EAAUpC,UAAWD,GAAe+B,GAAU3B,MA9GhE,2BA0C3B,WACE,IAAKG,EAAa+B,QAAS,OAAO,EAClC,IAAK,IAAMnC,KAAOI,EAAa+B,QAAQC,MACrC,GAAIhC,EAAa+B,QAAQC,MAAMpC,KAASI,EACtC,OAAO,EAGX,OAAO,MAjDkB,GAA+DF,IAAML,WAArE,EAEpBwC,YAFoB,mBAEMxC,EAAUwC,aAAexC,EAAUyC,MAAQ,aAFjD,GAiHd,SAASC,EAAgBzC,GAA0B,IAAfZ,EAAc,uDAAJ,GAU3D,OARIY,EAAU0C,YAAc1C,EAAU6B,UACpC7B,EAAYA,EAAU6B,SAEpBzC,EAAQoB,UACVR,EAAYA,KAGdZ,EAAUF,EAAWE,OAASuD,GAAW,GAClC,CACLC,KADK,WAEH,MAAO,CACL/D,QAAS,KAGbgE,QANK,WAQHlD,KAAKmD,uBACDnD,KAAKoD,MAAMC,SAASC,SACtBrD,EAAYqD,OAAStD,KAAKoD,MAAMC,SAASC,QAEvCtD,KAAKoD,MAAMC,SAASC,SACtBrD,EAAYsD,MAAQvD,KAAKoD,MAAMC,SAASE,QAG5CpD,MAAO,CAAC,mBACRkB,OAjBK,SAiBEC,GACLtB,KAAKwD,YACL,MAA4B/D,EAAQpB,MAAMG,mBAAlCE,EAAR,EAAQA,MAAUwC,EAAlB,iBACA,OAAOI,EAAc7B,EAAQpB,MAAMC,cAAe,CAAEiC,IAAK,QAASW,QAAOxC,SAASsB,KAAKd,QAAQC,KAAI,SAACC,EAAQC,GAAT,OAAmBD,EAAOkC,EAAejC,QAE9IoE,QAAS,CACPC,cADO,SACOC,GACZ3D,KAAKd,QAAQ0E,KAAKD,IAGpBH,UALO,WAKM,IAAD,OACV3D,OAAOgE,KAAK7D,KAAKwB,QAAQsC,SAAQ,SAACxE,GAChCyE,QAAQC,IAAI,EAAKxC,OAAOlC,OAE1BO,OAAOgE,KAAK7D,KAAKyB,cAAcqC,SAAQ,SAACxE,GACtC,EAAKmC,aAAanC,SAGtB2E,oBAbO,SAaaC,GAWlB,OAVAlE,KAAKmE,cAAgB,CACnBzF,MAAM,2BAAMsB,KAAKoE,YAAYF,EAAMjB,KAAKvE,QAAWsB,KAAKoE,YAAYF,EAAMjB,KAAKoB,cAC/EC,MAAOC,MAAMC,KAAK,IAAIC,IAAJ,sBAAYzE,KAAK0E,YAAYR,EAAMjB,KAAKqB,QAAxC,YAAmDtE,KAAK0E,YAAYR,EAAMjB,KAAK0B,iBAAgBC,KAAK,MAExH/E,OAAOC,OAAOoE,EAAMjB,KAAM,CACxBoB,YAAa,KACb3F,MAAO,KACPiG,YAAa,KACbL,MAAO,OAEFJ,GAGTf,qBA3BO,WA2BiB,IAAD,OACjBe,EAAQlE,KAAK6E,OACjB7E,KAAKiE,oBAAoBC,GAEzBrE,OAAOiF,eAAe9E,KAAM,SAAU,CACpC+E,IADoC,WAElC,OAAOb,GAETc,IAAK,SAACC,GACJ,OAAIA,IAAQf,EAAcA,EAC1BA,EAAQ,EAAKD,oBAAoBgB,OAKvCC,YA1CO,SA0CKD,GAEV,OAAOA,EAAIE,QADC,UACY,SAACC,EAAGC,GAAJ,OAAWA,EAAGC,kBAExClB,YA9CO,SA8CKa,GAAM,IAAD,OACf,IAAKA,EAAK,MAAO,GACjB,GAAmB,kBAARA,EAET,OADAA,EAAMA,EAAIM,QACCC,MAAM,WAAWC,QAAO,SAACC,EAAMC,GACxC,OAAKA,GAIc,KADnBA,EAAMA,EAAIH,MAAM,YACRI,QACR/F,OAAOC,OAAO4F,EAAd7F,OAAA,IAAAA,CAAA,GACG,EAAKqF,YAAYS,EAAI,IAAMA,EAAI,KAFLD,GAHpBA,IAQR,IAEL,GAAmB,kBAART,EAAkB,CAC3B,IAAMY,EAAS,GAIf,OAHAhG,OAAOgE,KAAKoB,GAAKnB,SAAQ,SAACgC,GACxBD,EAAO,EAAKX,YAAYY,IAAMb,EAAIa,MAE7BD,EAET,MAAO,IAETnB,YAvEO,SAuEKO,GACV,OAAKA,EACDA,aAAeV,MAAcU,EACd,kBAARA,GACTA,EAAMA,EAAIM,QACCC,MAAM,OAEA,kBAARP,EACFpF,OAAOgE,KAAKoB,GAAK9F,KAAI,SAAC2G,GAAD,OAAQb,EAAIa,GAAKb,EAAIa,GAAI,MAEhD,GATU,IAYnBC,aApFO,SAoFMC,GACX,SAASC,EAAmBC,GAC1B,SAASC,EAAQC,GACf,OAAIJ,EAAaK,cACRL,EAAaK,cAAcD,GAE7BrE,EAAgBmE,EAAgBF,EAAaI,IAA9B,YAAC,eAA6C3G,GAA9C,IAAuDoB,SAAS,KAAQQ,SAGhG,OADA8E,EAAQG,YAAcN,EACfG,EAGT,OADAF,EAAmBhE,cAAe,EAC3BgE,GAETM,oBAlGO,SAkGaC,GAAS,IAAD,OAE1B,EAMoC,MAA/BxG,KAAKyG,OAAOC,gBAA0B1G,KAAKyG,OAAOC,gBAAkB,GALnEC,EADN,EACEC,GACQC,EAFV,EAEErF,OACcsF,EAHhB,EAGErF,aACAjB,EAJF,EAIEA,SACGuG,EALL,iBASMC,EAAc,GACdC,EAAU,2BAAQJ,GAAuB7G,KAAKwB,QAEpD,IAAK,IAAME,KAAKuF,EACdD,EAAYtF,GAAKuF,EAAWvF,GAC5BsF,EAAYtF,GAAGE,QAAS,EAG1B,IAAMsF,EAAc,GACdC,EAAgB,2BAAQL,GAA6B9G,KAAKyB,cAChE,IAAK,IAAMC,KAAKyF,EAEVH,EAAYtF,GAEV1B,KAAKyB,aAAaC,KACpB1B,KAAKyB,aAAaC,GAAGE,QAAS,GAK9BuF,EAAiBzF,GAAGE,QACtBoF,EAAYtF,GAAKyF,EAAiBzF,KAClCsF,EAAYtF,GAAGE,QAAS,GAG1BsF,EAAYxF,GAAK1B,KAAK+F,aAAaoB,EAAiBzF,IAGtD,IAAMH,EAAa,uCACdwF,GADc,eAET/G,KAAKoH,SAFI,IAGjB5F,OAAQwF,EACRvF,aAAcyF,EACd1G,WACAoG,GAAG,2BAAMD,GAAoB3G,KAAKqH,cAE9BC,EAAe,eAAQN,GAC7BxG,EAAW8G,EAAgBpF,eACpBoF,EAAgBpF,QAEvB,IAAMqF,EAAU,GAChB,IAAK,IAAI7F,KAAK1B,KAAKwH,IAAIC,QACjBzH,KAAKwH,IAAIC,QAAQ9F,eAAeD,IAAMA,EAAEgG,MAAM,mBAChDH,EAAQ,QAAU7F,GAAK,IAI3B,GAAK8E,EAyDHmB,aAAa3H,KAAK4H,aAClB5H,KAAK4H,YAAcC,YAAW,WAC5B,EAAKC,cAAcC,SAAnB,2HACKhB,GACA,EAAKK,QACL,EAAKC,YACL,CAAE7G,aACF8G,GACAJ,GACA,CAAE,oBAAqB3F,IACtB,EAAK4C,cAAcG,MAAQ,CAAC0D,UAAW,EAAK7D,cAAcG,OAAQ,IARxE,eASSiD,IATT,IAUE7I,MAAO,EAAKyF,cAAczF,gBArEnB,CACX,IAAM0B,EAAYM,EAAqBL,EAAWZ,EAASO,MACvDiI,EAAqB,kBAAC7H,EAAD,iBACjB2G,EACA/G,KAAKoH,OACL7F,EAAcqF,GAHG,CAIfpG,YACF8G,EACAJ,EANiB,CAOf,oBAAqB3F,GACtBvB,KAAKmE,cAAcG,MAAQ,CAAC0D,UAAWhI,KAAKmE,cAAcG,OAAQ,GACnEiD,EATiB,CAUrB7I,MAAOsB,KAAKmE,cAAczF,MAC1B6B,IAAK,SAACA,GAAD,OAAU,EAAKuH,cAAgBvH,MAGxC,GAAIP,KAAKkI,QAAUlI,KAAKkI,OAAO3E,OAASvD,KAAKkI,OAAOC,kBAAmB,CACrE,IAAMC,EAAepI,KAAKkI,OAAOC,kBACjCF,EAAqB,kBAACG,EAAaC,SAAd,CAAuBC,MAAO,CAAE/E,MAAOvD,KAAKkI,OAAO3E,QAAU0E,GAGpFjI,KAAKuI,WAAU,WAKb,IAJA,IAEIC,EAFEC,EAAY,EAAK9F,MAAMtE,MACzBqK,EAAiB,EAAKhG,QAGnBgG,GAAgB,CACrB,GAAIA,EAAeC,sBAAuB,CACxCH,EAAkBE,EAAeC,sBACjC,MAEF,GAAID,EAAeF,gBAAiB,CAClCA,EAAkBE,EAAeF,gBACjC,MAEFE,EAAiBA,EAAehG,QAGlC,GAAI8F,EASF,OAPA,EAAKG,sBAAwBH,EAE7B,EAAKI,YAAc,kBAAMC,IAASC,aAC9Bb,EACAQ,SAEJD,EAAgBO,gBAAgB,EAAKH,aAGvCC,IAASxH,OACL4G,EACAQ,SAwBZO,QA7PK,WA8PHrB,aAAa3H,KAAK4H,aAClB5H,KAAKuG,uBAEP0C,cAjQK,WAoQH,GAFAtB,aAAa3H,KAAK4H,aAEd5H,KAAK4I,YAAa,CACpB,IAAQ1J,EAAYc,KAAK2I,sBAAsB/H,MAAvC1B,QACFG,EAAQH,EAAQgK,QAAQlJ,KAAK4I,aAGnC,OAFA1J,EAAQiK,OAAO9J,EAAO,QACtBW,KAAK2I,sBAAsBS,QAAUpJ,KAAK2I,sBAAsBZ,SAAS,CAAE7I,aAI7E2J,IAASQ,uBAAuBrJ,KAAK2C,MAAMtE,QAE7CiL,QA9QK,WA+QHtJ,KAAKuG,qBAAoB,IAE3BpF,cAAc,EACdoI,MAAO,CACLnC,OAAQ,CACNoC,QADM,WAEJxJ,KAAKuG,qBAAoB,IAE3BkD,MAAM,GAERpC,WAAY,CACVmC,QADU,WAERxJ,KAAKuG,qBAAoB,IAE3BkD,MAAM,GAER,yBAA0B,CACxBD,QADwB,WAEtBxJ,KAAKuG,qBAAoB,IAE3BkD,MAAM,KChbd,IAAIC,EAAkB,GAsBf,SAASC,EAAwBC,GACtC/J,OAAOC,OAAO4J,EAAgBG,YAAYC,MAA1CjK,OAAA,IAAAA,CAAA,GAAsD+J,IAEzCG,I,uNChBTC,EAAeC,WAAWC,YAAY,GAAK,UAAY,GACvDC,EAAc,4BAEdC,EAAqB,IAAI3F,IAAI,CAAC,UAAW,gBAAiB,gBAAiB,SAAU,YAAa,cAAe,aAAc,cAAe,aAAc,cAAe,SAAU,cAAe,eAAgB,eAAgB,cAAe,aAAc,cAAe,YAAa,WAAY,UAAW,YAAa,UAAW,WAAY,UAAW,SAAU,gBAAiB,gBAAiB,cAAe,kBAAmB,sBAAuB,uBAAwB,iBAAkB,iBAAkB,gBAAiB,eAAgB,WAAY,gBAAiB,aAAc,cAAe,eAAgB,WAAY,UAAW,UAAW,YAAa,mBAAoB,mBAAoB,YAAa,cAAe,UAAW,UAAW,eAAgB,mBAAoB,cAAe,UAAW,SAAU,YAAa,aAAc,eAAgB,WAAY,YAAa,YAAa,YAAa,eAAgB,iBAAkB,YAAa,SAAU,UAAW,mBAAoB,iBAAkB,uBAAwB,kBAAmB,aAGzjC,SAAS4F,EAAoBhK,GAC3B,MAAyB,kBAAdA,EACFiK,UAAIjK,UAAUA,GAEhBA,EAGT,SAASkK,EAAYnK,GACnB,MAAyB,oBAAdA,EAEFA,EAAUX,QAEZW,E,IAGHoK,E,kDACJ,WAAarK,GAAQ,IAAD,sBAClB,cAAMA,GACN,IDvBiCyJ,ECuB3Ba,EAAsDtK,EAAtDsK,QAAS/C,EAA6CvH,EAA7CuH,MAAOgD,EAAsCvK,EAAtCuK,SAAyBjI,GAAatC,EAA5BwK,WAAhC,YAA4DxK,EAA5D,IAFkB,OAGlB,EAAKS,MAAL,eACK6B,GDzB4BmH,EC4Bb,CAClBa,UACA/C,QACAgD,YD9BAhB,EAAgBG,YAClBF,EAAuBC,IAGzBF,EAAgBG,YAAc,IAAIS,UAAI,CACpCrH,KAAK,eACA2G,KAGPU,UAAIhI,UAAUsI,aAAelB,EAAgBG,YAAYC,OCWrC,E,qCAchBE,E,mCAAJ,SAA8Ca,GAE5ClB,EAAuB,CACrBc,QAFiCI,EAA7BJ,QAGJ/C,MAHiCmD,EAApBnD,MAIbgD,SAJiCG,EAAbH,a,oBAOxB,WACE,OAAO,kBAAC,EAAD,iBAAwB1K,KAAKY,MAA7B,CAAoCL,IAAMP,KAAKG,MAAMwK,kB,GAxB3BlK,IAAML,WA4BrC0K,EAAerK,IAAMkK,YAAW,SAACxK,EAAOI,GAC5C,IAAMwK,EAAgBxL,EAAWY,EAAMgK,IAAgB,QAAInH,GAAW,GAGtE,OAAI0G,EAAgBsB,YACbF,EAAaG,wBAChBH,EAAaG,sBAAwBvB,EAAgBsB,WAAWR,IAI9D,kBAACM,EAAaG,sBAAd,4CAA4C9K,GAA5C,kBAAoDgK,EAAcY,IAAlE,CAAkFJ,WAAYpK,MAG3F,kBAAC,EAAD,4CAA4BJ,GAA5B,kBAAoCgK,EAAcY,IAAlD,CAAkExK,IAAKA,QAO5E2K,E,kDACJ,WAAa/K,GAAQ,IAAD,8BAClB,cAAMA,IACDS,MAAQ,CACX1B,QAAS,IAGX,EAAKiM,oBAAsBd,EAAmBlK,EAAME,WACpD,EAAK+K,kBAAoB,EAAKA,kBAAkBrK,KAAvB,gBACzB,EAAKsK,sBAAwB,EAAKC,8BARhB,E,mDAWpB,SAAiB1C,GACf,IAAQ1J,EAAYc,KAAKY,MAAjB1B,QACRA,EAAQ0E,KAAKgF,GACb5I,KAAK+H,SAAS,CAAE7I,c,yCAIlB,WAAgC,IAAD,OACzBD,EAAc,GACZQ,EAAUO,KAAKG,MAAMgK,GAsB3B,OArBI1K,EAAQoB,SACVhB,OAAOgE,KAAK7D,KAAKG,OAAO2D,SAAQ,SAACyH,GAC3BnB,EAAmBoB,IAAID,IAA2C,oBAAxB,EAAKpL,MAAMoL,KACvDtM,EAAYsM,GAAW,EAAKpL,MAAMoL,OAGlC9L,EAAQX,IAAIF,gBACdK,EAAW,2BACNA,GACAQ,EAAQX,IAAIF,iBAIfa,EAAQX,IAAIN,qBACdS,EAAW,2BACNA,GACAQ,EAAQX,IAAIN,qBAKdiB,EAAQX,IAAIC,iBAAiB,yBAAKwB,IAAKP,KAAKoL,oBAAuBnM,K,eAGxE+K,E,mCAAJ,SAA8Ca,GAC5C,IAAMxK,EAAgDwK,EAAhDxK,UAAsCF,GAAU0K,EAApCV,GAAlB,YAAsDU,EAAtD,aAAkBV,GAAlB,WACA9J,EAAYgK,EAAmBhK,GAC3BL,KAAKmL,sBAAwB9K,GAC/BL,KAAKyL,mBAAmBpL,GAI1BR,OAAOC,OAAOE,KAAK6J,YAAYC,MAAO9J,KAAK0L,SAASvL,M,kCAGtD,WAEE,GAAIH,KAAK2D,UAAT,CACE,IAAQzE,EAAYc,KAAK2L,oBAAjBzM,QACFG,EAAQH,EAAQgK,QAAQlJ,KAAK2D,WACnCzE,EAAQiK,OAAO9J,EAAO,QAGxBW,KAAK6J,YAAY+B,a,sBAInB,SAAUzL,GACR,IAAM0L,EAAwB1L,EAAxB0L,OAAWpJ,EAAjB,YAA8BtC,EAA9B,GACA,QAAe6C,IAAX6I,EAAsB,OAAO1L,EAEjC,IAAI2L,EAAsB,2BAAQ,CAAEC,KAAM,QAASC,MAAO,UAAczB,EAAWvK,KAAKmL,qBAAqBc,OACzGC,EAAS,eAAMJ,EAAuBC,KAAOF,EAAOvD,OAGxD,GADK7F,EAASmE,KAAInE,EAASmE,GAAK,IAC5BnE,EAASmE,GAAGkF,EAAuBE,OAAQ,CAC7C,IAAIG,EAAS1J,EAASmE,GAAGkF,EAAuBE,OAChDvJ,EAASmE,GAAGkF,EAAuBE,OAAS,WAAoB,IAAD,uBAANI,EAAM,yBAANA,EAAM,gBAC7DD,EAAOpM,MAAMC,KAAMoM,GACnBP,EAAOQ,QAAUR,EAAOQ,OAAOtM,MAAMC,KAAMoM,SAG7C3J,EAASmE,GAAT,2BAAmBnE,EAASmE,IAA5B,eAAsCkF,EAAuBE,MAAQH,EAAOQ,QAAW,eAEzF,OAAO,2BAAK5J,GAAayJ,K,oBAI3B,SAAQ/L,GACN,IAAMmM,EAAuBnM,EAAvBmM,MAAU7J,EAAhB,YAA6BtC,EAA7B,GACA,QAAc6C,IAAVsJ,EAAqB,OAAOnM,EAChC,IAAMoM,EAAa,GAHN,WAIJ7K,GACP,IAAK4K,EAAM3K,eAAeD,KAAO4K,EAAM5K,IAAwB,MAAlB4K,EAAM5K,GAAG4G,OAAoC,MAAnBgE,EAAM5K,GAAG2K,OAAgB,iBAChGE,EAAW7K,GAAK4K,EAAM5K,GAAG4G,MACzB,IAAIkE,EAAY,UAAY9K,EAG5B,GADKe,EAASmE,KAAInE,EAASmE,GAAK,IAC5BnE,EAASmE,GAAG4F,GAAY,CAC1B,IAAIL,EAAS1J,EAASmE,GAAG4F,GACzB/J,EAASmE,GAAG4F,GAAa,WAAoB,IAAD,uBAANJ,EAAM,yBAANA,EAAM,gBAC1CD,EAAOpM,MAAMC,KAAMoM,GACnBE,EAAM5K,GAAG2K,QAAUC,EAAM5K,GAAG2K,OAAOtM,MAAMC,KAAMoM,SAGjD3J,EAASmE,GAAT,2BAAmBnE,EAASmE,IAA5B,eAAsC4F,EAAYF,EAAM5K,GAAG2K,QAAW,gBAb1E,IAAK,IAAI3K,KAAK4K,EAAO,EAAZ5K,GAgBT,OAAO,2BAAKe,GAAa8J,K,+BAG3B,SAAmBE,GAAgB,IAAD,OAC1BC,EAAuB1M,KAC7B,EAA+FA,KAAKG,MAA9FE,EAAN,EAAMA,UAAN,IAAiB,qBAAqBkB,OAAtC,MAAsD,GAAtD,EAAyE9B,EAAzE,EAA2D0K,GAA0BhK,EAArF,+CAA2DgK,GAA3D,UACA9J,EAAYgK,EAAmBhK,GAkD/B,SAASsM,EAAeC,GACjB5M,KAAK6J,cACR7J,KAAK6J,YAAc+C,GAGvBD,EAAiBA,EAAe5L,KAAKf,MAIrC,IAAM6M,EAAc,2BAAQ7M,KAAK8M,OAAO9M,KAAK0L,SAASvL,KAAlC,IAA2C,oBAAqBoB,IAC9EwL,EAAU,2BACX9M,GADW,IAEdgD,KAFc,WAGZ,OAAO4J,GAET3J,QALc,WAMZyJ,EAAe3M,OAEjByD,QAAS,CAGPuJ,kBAHO,SAGY1L,EAAeE,GAAS,IAAD,OACnCxB,KAAKgN,kBAAkBC,mBAC1BjN,KAAKgN,kBAAkBC,iBAAmB,IAE5C,IAAIC,EAAYrN,OAAOC,OAAO,GAAI0B,GAJM,WAK/BE,GACP,IAAKwL,EAAUvL,eAAeD,KAAOwL,EAAUxL,GAAI,iBACnDwL,EAAUxL,GAAM,SAACyL,EAAMC,GACrB,OAAID,EAAKrL,QACAqL,EAAKrL,SAIT,EAAKkL,kBAAkBC,iBAAiBvL,IAI3C2L,EAAU,EAAKL,kBAAkBC,iBAAiBvL,IAEtC,GAAG4L,MAAMxF,cACnBuF,EAAQ,GAAGC,MAAMxF,cAAcC,SAAS,CAAEvH,SAAU2M,IAEpD,EAAK5E,WAAU,WACb8E,EAAQ,GAAGC,MAAMxF,cAAcC,SAAS,CAAEvH,SAAU2M,QATxDE,EAAU,CAAC/L,EAAcwB,GAAgB,kBAAMqK,IAAP,YAAC,eAAiB1N,GAAlB,IAA2BoB,SAAS,KAAS,CAAEsM,KAAMC,KAC7F,EAAKJ,kBAAkBC,iBAAiBvL,GAAK2L,GAY/CA,EAAQxL,UAAYsL,EACbE,GAhBP,IAAIA,EALU,CAsBbH,EAAUxL,GAAIA,IAxBnB,IAAK,IAAIA,KAAKwL,EAAW,EAAhBxL,GA0BT,OAAOwL,GAITK,eAtCO,SAsCSjM,EAAeG,GAAe,IAAD,OACtCzB,KAAKuN,eAAeC,eACvBxN,KAAKuN,eAAeC,aAAe,IAErC,IAAMC,EAAe,eAAQhM,GAJc,WAKlCC,GACP,IAAK+L,EAAgB9L,eAAeD,GAAI,iBACxC,IACuBgM,EADnBrH,EAAgBoH,EAAgB/L,GACpC+L,EAAgB/L,IAAOgM,EAuBpBrH,EAtBM,SAACD,GACN,OAAIsH,EAAWpH,YACNoH,EAAWpH,YAAYF,IAI3B,EAAKmH,eAAeC,aAAa9L,IAIpC2L,EAAU,EAAKE,eAAeC,aAAa9L,IAE/B4L,MAAMxF,cAChBuF,EAAQC,MAAMxF,cAAcC,SAAS,CAAEvH,SAAUkN,EAAWtH,KAE5D,EAAKmC,WAAU,WACb8E,EAAQC,MAAMxF,cAAcC,SAAS,CAAEvH,SAAUkN,EAAWtH,SAThEiH,EAAU/L,EAAcwB,GAAgB,kBAAM4K,EAAWtH,KAAlB,YAAC,eAAgC3G,GAAjC,IAA0CoB,SAAS,MAC1F,EAAK0M,eAAeC,aAAa9L,GAAK2L,GAYjCA,GAfP,IAAIA,IAkBRI,EAAgB/L,GAAG2E,cAAgBA,GA3BrC,IAAK,IAAI3E,KAAK+L,EAAiB,EAAtB/L,GA6BT,OAAO+L,GAOTE,YA/EO,SA+EMrM,EAAed,GAMxB,IAAI6M,EAJN,GAAgB,MAAZ7M,EACF,OAAIA,EAASsB,QACJtB,EAASsB,SAGb9B,KAAK2N,YAAYC,SAMpBP,EAAUrN,KAAK2N,YAAYC,SAEf,GAAGN,MAAMxF,cACnBuF,EAAQ,GAAGC,MAAMxF,cAAcC,SAAS,CAAEvH,aAE1CR,KAAKuI,WAAU,WACb8E,EAAQ,GAAGC,MAAMxF,cAAcC,SAAS,CAAEvH,iBAX9C6M,EAAU,CAAC/L,EAAcwB,GAAgB,kBAAMtC,IAAP,YAAC,eAAqBf,GAAtB,IAA+BoB,SAAS,OAChFb,KAAK2N,YAAYC,QAAUP,GAc7BA,EAAQxL,UAAYrB,EACb6M,KAIbrE,QAnHc,WAqHZ0D,EAAqBtD,OAASpJ,KAAK6N,UAAU,GAE7C7N,KAAK6N,UAAU,GAAGrF,gBAAkBkE,GAEtCzD,cAzHc,WA2HZyD,EAAqBtD,OAAS,KAC9BpJ,KAAK6N,UAAU,GAAGrF,gBAAkB,MAEtCnH,OA9Hc,SA8HNC,GAEN,MAakBtB,KAAK8J,MAZrBlD,GADF,EAAMvG,UAAN,EACEuG,IACApF,EAFF,EAEEA,OACAC,EAHF,EAGEA,aAHF,KAIEjB,SAJF,SAKWwH,OALX,MAKuB,GALvB,MAMEtJ,aANF,MAMU,GANV,MAOE,qBACUmI,EARZ,EAQIrF,OACcsF,EATlB,EASIrF,aACUqM,EAVd,EAUItN,SACImG,EAXR,EAWIC,GACGG,EAZP,iBAaQ5G,EAbR,kBApJmB,SAAC+G,EAAa6G,GACnC,IAAK7G,EAAa,MAAO,GACzB,IAAK6G,EAAO,OAAO7G,EACnB,IAAK,IAAIxF,KAAKwF,EACPA,EAAYvF,eAAeD,IAC5BqM,EAAMrM,WAAWwF,EAAYxF,GA6JjCsM,CAAiBlH,EAA0BD,GAE3C,IAAMK,EAAclH,KAAKuN,eAAejM,EAApB,2BAAwCwF,GAA6BrF,IACnFwM,EAAejO,KAAK2N,YAAYrM,EAAetB,KAAKQ,UAAYsN,GAEhEI,EAAalO,KAAKgN,kBAAkB1L,EAAvB,2BAA2CuF,GAAuBrF,IACjFyM,IAAcC,EAAWhM,QAAU+L,GACvC,IAAME,EAAS,CACZF,GAAgB,IADJ,mBAEVpO,OAAOgE,KAAKqK,GAAY/O,KAAI,SAACG,GAC9B,GAAY,YAARA,EAGJ,OAAO4O,EAAW5O,QAGhB8O,EAAM,2BAAQzH,GAAoBC,GAClCyH,EAAW,GAGjBxO,OAAOgE,KAAK1D,GAAO2D,SAAQ,SAACyH,GACtBnB,EAAmBoB,IAAID,IAAsC,oBAAnBpL,EAAMoL,KAClD8C,EAAS9C,EAAQpG,QAAQ,MAAO,IAAImJ,eAAiBnO,EAAMoL,UACpDpL,EAAMoL,OAIjB,IAAIgD,EAAS,uCACRxH,GACA5G,GAFQ,IAIX,oBAAoB,uCACf4G,GACA5G,GAFL,IAGEyG,GAAIwH,EACJ5N,SAAUyN,EACVzM,OAAQ0M,EACRzM,aAAcyF,MAMZhG,EAnPQ,SAACf,GAEjB,IAAIqO,EAAmB,GACnBC,EAAkB,GAElBC,EAAmBnE,EAAW,EAAKY,qBACnCuD,EAAiBC,QACnBD,EAAiBC,OAAO7K,SAAQ,SAACgC,GAC3BA,EAAE3F,QACA2F,EAAE3F,iBAAiBoE,MACrBiK,EAAgB,YAAO1I,EAAE3F,OAEzBsO,EAAe,eAAQ3I,EAAE3F,WAMjC,IAAIe,EAAQrB,OAAOC,OAAO,GAAIK,GAC1ByO,EAAcF,EAAiBvO,MACnC,GAAIyO,EACF,GAAIA,aAAuBrK,MAAO,CACrB,sBAAOqK,GAAP,YAAuBJ,IAC1B1K,SAAQ,SAACgC,UACR5E,EAAM4E,UAEV,CACL,IAAI+I,EAAQ,2BAAQD,GAAgBH,GACpC,IAAK,IAAI/M,KAAKmN,EACPA,EAASlN,eAAeD,WACtBR,EAAMQ,GAInB,OAAOR,EAiNS4N,CAAY,eAAKP,IAC/B,OAAOjN,EACH,kBACA,CACEnB,MAAOoO,EACP3H,GAAIwH,EACJC,WACAnN,QACA,MAAS8G,EACTtJ,QACAwI,YAAY,eAAMA,IAEpBiH,IAGNY,WAAY,CACV,gBAAmB1O,KAIlBoM,GAELnC,UAAI0E,UAAS,WACX,IAAMC,EAAW,4BAA8BC,KAAKC,SAAW,IAAIC,OAAO,GAC1E3C,EAAc4C,GAAKJ,EAMnB,IAJA,IAEIhO,EADAyH,GADc,EAAK4G,iBAAmB,EAAKC,qBAChBC,OAGxB9G,GAAgB,CAAC,IAAD,IACrB,aAAIA,EAAe+G,iBAAnB,aAAI,EAA0B9D,oBAAqB,CACjD1K,EAAgByH,EAAe+G,UAAU9D,oBACzC,MAEF,aAAIjD,EAAe+G,iBAAnB,aAAI,EAA0BxO,cAAe,CAC3CA,EAAgByH,EAAe+G,UAAUxO,cACzC,MAEFyH,EAAiBA,EAAe8G,OAGlC,GAAIvO,EAMF,OAJA,EAAK0K,oBAAsB1K,EAE3B,EAAK0C,UAAY,SAACrC,EAAehC,GAAhB,OAAwBgC,EAAcoO,iBAAgB,CAACvP,MAAO,CAACwP,QAAS,IAAMV,EAAUW,MAAK,EAAMC,YAAY,GAAOvQ,OAAM,CAACgC,EAAcyL,WAC5J9L,EAAcyC,cAAc,EAAKC,WAMnC,EAAKkG,YAAc,IAAIS,UAAJ,2BAAYyC,GAAZ,IAAwB+C,GAAIrD,U,gCAKnD,SAAoBsD,GAClB/P,KAAKmL,oBAAsB4E,EAIvBA,EAAc3O,gBAEhBvB,OAAOC,OAAOE,KAAK6J,YAAYxG,SAAS0L,WAAWiB,gBAAgBC,MAAM,GAAGxQ,QAASsQ,GAGrF/P,KAAK6J,YAAYxG,SAAS0L,WAAWiB,gBAAkBD,EAEzD/P,KAAK6J,YAAYqG,iB,oBAGnB,WACE,OAAO,uBAAM7E,sBAAN,CAA4BnM,QAASc,KAAKY,MAAM1B,c,GAnb1BuB,IAAML,WAubxB,SAAS2B,EAAiB1B,GAA0B,IAAfZ,EAAc,uDAAJ,GAY5D,OAVKY,GACH0D,QAAQoM,KAAK,gDAIX9P,EAAU0C,YAAc1C,EAAU6B,UACpC7B,EAAYA,EAAU6B,SAIjBzB,IAAMkK,YAAW,SAACxK,EAAOI,GAC9B,OAAO,kBAACuK,EAAD,iBAAkB3K,EAAlB,CAAyBE,UAAWA,EAAWE,IAAKA,GAApD,eAA+D4J,EAAc1K,QCxgBxF,ICTwC2Q,ECAlCC,EAAOC,gBAAK,kBAAM,iCAClBC,EAAcD,gBAAK,kBAAM,iCACzBE,EAAcF,gBAAK,kBAAM,iCACzBG,EAAaH,gBAAK,kBAAM,uDACxBI,GAAaJ,gBAAK,kBAAM,iCAKf,IDTyBF,ECMT,kBAAI,+BDL1BE,gBAAK,kBAAMF,IAAcO,MAAK,SAACC,GACpC,MAAO,CAAE1O,QAASH,EAAgB6O,EAAI1O,gBCO3B,CACX,CACI2O,KAAM,IACNC,OAAO,EACPzQ,UAAW,WACP,OACI,kBAAC,WAAD,CAAU0Q,SAAU,4CAChB,kBAACV,EAAD,SAKhB,CACIQ,KAAM,eACNC,OAAO,EACPzQ,UAAW,WACP,OACI,kBAAC,WAAD,CAAU0Q,SAAU,4CAChB,kBAACR,EAAD,SAKhB,CACIM,KAAM,eACNC,OAAO,EACPzQ,UAAW,WACP,OACI,kBAAC,WAAD,CAAU0Q,SAAU,4CAChB,kBAACP,EAAD,SAKhB,CACIK,KAAM,cACNC,OAAO,EACPzQ,UAAW,WACP,OACI,kBAAC,WAAD,CAAU0Q,SAAU,4CAChB,kBAACN,EAAD,SAKhB,CACII,KAAM,cACNC,OAAO,EACPzQ,UAAW,WACP,OACI,kBAAC,WAAD,CAAU0Q,SAAU,4CAChB,kBAACL,GAAD,CAAYM,oBAAqB,SAACzQ,GAAOwD,QAAQC,IAAI,OAAOzD,W,SCxDhFwJ,iCAAsBiB,KAoBPiG,OAlBf,WACE,OACI,kBAAC,IAAD,KACE,yBAAKjJ,UAAU,OACb,4BAAQA,UAAU,cAChB,6BACI,kBAAC,IAAD,CAAMkJ,GAAG,KAAT,QADJ,SAEE,kBAAC,IAAD,CAAMA,GAAG,gBAAT,4DAFF,SAGE,kBAAC,IAAD,CAAMA,GAAG,gBAAT,sEAHF,SAII,kBAAC,IAAD,CAAMA,GAAG,eAAT,iFAEHC,YAAaC,QCPNC,QACW,cAA7BC,OAAO5G,SAAS6G,UAEe,UAA7BD,OAAO5G,SAAS6G,UAEhBD,OAAO5G,SAAS6G,SAAS7J,MACvB,2DCZNmB,IAASxH,OAAO,kBAAC,GAAD,MAASmQ,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMjB,MAAK,SAAAkB,GACjCA,EAAaC,kB","file":"static/js/main.2f5b8f18.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst originOptions = {\r\n  react: {\r\n    componentWrap: 'div',\r\n    slotWrap: 'div',\r\n    componentWrapAttrs: {\r\n      __use_react_component_wrap: '',\r\n      style: {\r\n        all: 'unset'\r\n      }\r\n    },\r\n    slotWrapAttrs: {\r\n      __use_react_slot_wrap: '',\r\n      style: {\r\n        all: 'unset'\r\n      }\r\n    }\r\n  },\r\n  vue: {\r\n    // 组件wrapper\r\n    componentWrapHOC: (VueComponentMountAt, nativeProps = []) => {\r\n      // 传入portals\r\n      return function ({ portals = [] } = {}) {\r\n        return (<div {...nativeProps}>{VueComponentMountAt}{portals.map((Portal, index) => <Portal key={index}/>)}</div>)\r\n      }\r\n    },\r\n    componentWrapAttrs: {\r\n      'data-use-vue-component-wrap': '',\r\n      style: {\r\n        all: 'unset',\r\n      }\r\n    },\r\n    slotWrapAttrs: {\r\n      'data-use-vue-slot-wrap': '',\r\n      style: {\r\n        all: 'unset'\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport function setOptions (newOptions = {\r\n  react: {},\r\n  vue: {}\r\n}, options = originOptions, clone) {\r\n  if (!newOptions.vue) {\r\n    newOptions.vue = {}\r\n  }\r\n  if (!newOptions.react) {\r\n    newOptions.react = {}\r\n  }\r\n  const params = [options, {\r\n    ...newOptions,\r\n    react: {\r\n      ...options.react,\r\n      ...newOptions.react,\r\n      componentWrapAttrs: {\r\n        ...options.react.componentWrapAttrs,\r\n        ...newOptions.react.componentWrapAttrs\r\n      },\r\n      slotWrapAttrs: {\r\n        ...options.react.slotWrapAttrs,\r\n        ...newOptions.react.slotWrapAttrs\r\n      }\r\n    },\r\n    vue: {\r\n      ...options.vue,\r\n      ...newOptions.vue,\r\n      componentWrapAttrs: {\r\n        ...options.vue.componentWrapAttrs,\r\n        ...newOptions.vue.componentWrapAttrs\r\n      },\r\n      slotWrapAttrs: {\r\n        ...options.vue.slotWrapAttrs,\r\n        ...newOptions.vue.slotWrapAttrs\r\n      }\r\n    }\r\n  }]\r\n  if (clone) {\r\n    params.unshift({})\r\n  }\r\n\r\n  return Object.assign.apply(this, params)\r\n}\r\n\r\nexport default originOptions\r\n","const vueRootInfo = {}\r\nexport default vueRootInfo\r\n","import React, {version} from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport applyVueInReact, { VueContainer } from \"./applyVueInReact\"\r\nimport options, { setOptions } from \"./options\"\r\n// vueRootInfo是为了保存vue的root节点options部分信息，现在保存router、store，在applyVueInReact方法中创建vue的中间件实例时会被设置\r\n// 为了使applyReactInVue -> applyVueInReact之后的vue组件依旧能引用vuex和vue router\r\nimport vueRootInfo from \"./vueRootInfo\"\r\n\r\nclass FunctionComponentWrap extends React.Component {\r\n  constructor(props) {\r\n    super(props)\r\n  }\r\n\r\n  render() {\r\n    const Component = this.props.component\r\n    const { ref, ...props } = this.props.passedProps\r\n    return <Component {...props}>{this.props.children}</Component>\r\n  }\r\n}\r\nconst createReactContainer = (Component, options, wrapInstance) => class applyReact extends React.Component {\r\n  // 用于reactDevTools调试用\r\n  static displayName = `useReact_${Component.displayName || Component.name || \"Component\"}`\r\n\r\n  // 使用静态方法申明是因为可以节省性能开销，因为内部没有调用到实例属性和方法\r\n  setRef(ref) {\r\n    if (!ref) return\r\n    // 使用reactRef属性保存目标react组件的实例，可以被父组setRef件的实例获取到\r\n    wrapInstance.reactRef = ref\r\n\r\n    // 并且将vue的中间件实例保存在react组件的实例中\r\n    // react组件可以通过这个属性来判断是否被包囊使用\r\n    ref.vueWrapperRef = wrapInstance\r\n  }\r\n\r\n  constructor(props) {\r\n    super(props)\r\n    // 将所有的属性全部寄存在中间件的状态中，原理是通过一个有状态的React组件作为中间件，触发目标组件的props\r\n    this.state = {\r\n      ...props,\r\n      ...(options.isSlots ? { children: Component } : {}),\r\n    }\r\n    this.setRef = this.setRef.bind(this)\r\n  }\r\n\r\n  // 对于插槽的处理仍然需要将VNode转换成React组件\r\n  createSlot(children) {\r\n    const { style, ...attrs } = options.react.slotWrapAttrs\r\n    return {\r\n      inheritAttrs: false,\r\n      __fromReactSlot: true,\r\n      render: (createElement) => createElement(options.react.slotWrap, { attrs, style }, children),\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (!wrapInstance.reactRef) return\r\n    // 垃圾回收，但是保留属性名，借鉴vue的refs对于组件销毁保留属性名的模式\r\n    wrapInstance.reactRef.vueWrapperRef = null\r\n    wrapInstance.reactRef = null\r\n  }\r\n\r\n  static catchVueRefs() {\r\n    if (!wrapInstance.$parent) return false\r\n    for (const ref in wrapInstance.$parent.$refs) {\r\n      if (wrapInstance.$parent.$refs[ref] === wrapInstance) {\r\n        return true\r\n      }\r\n    }\r\n    return false\r\n  }\r\n\r\n  render() {\r\n    let {\r\n      children,\r\n      \"data-passed-props\": __passedProps,\r\n      ...props\r\n    } = this.state\r\n    // 保留一份作用域和具名插槽，用于之后再透传给vue组件\r\n    const $slots = {}\r\n    const $scopedSlots = {}\r\n    // 插槽的解析\r\n    for (const i in props) {\r\n      if (!props.hasOwnProperty(i) || props[i] == null) continue\r\n      if (props[i].__slot) {\r\n        if (!props[i].reactSlot) {\r\n          const vueSlot = props[i]\r\n          // 执行applyVueInReact方法将直接获得react组件对象，无需使用jsx\r\n          // props[i] = { ...applyVueInReact(this.createSlot(props[i]))() }\r\n          props[i] = { ...applyVueInReact(this.createSlot(props[i]), { ...options, isSlots: true }).render() }\r\n          props[i].vueSlot = vueSlot\r\n        } else {\r\n          props[i] = props[i].reactSlot\r\n        }\r\n        $slots[i] = props[i]\r\n      } else if (props[i].__scopedSlot) {\r\n        // 作用域插槽是个纯函数，在react组件中需要传入作用域调用，然后再创建vue的插槽组件\r\n        props[i] = props[i](this.createSlot)\r\n        $scopedSlots[i] = props[i]\r\n      }\r\n    }\r\n    // 普通插槽\r\n    if (children != null) {\r\n      if (!children.reactSlot) {\r\n        const vueSlot = children\r\n        children = { ...applyVueInReact(this.createSlot(children), { ...options, isSlots: true }).render() }\r\n        children.vueSlot = vueSlot\r\n      } else {\r\n        children = children.reactSlot\r\n      }\r\n    }\r\n    $slots.default = children\r\n    // 封装透传属性\r\n    __passedProps = { ...__passedProps, ...{ $slots, $scopedSlots }, children }\r\n    const refInfo = {}\r\n    // 判断是否要加ref，因为无状态的函数组件没有ref\r\n    // 通过判断Component的原型是否不是Function原型\r\n    refInfo.ref = this.setRef\r\n    if (options.isSlots) {\r\n      return this.state.children || this.props.children\r\n    }\r\n    if ((Object.getPrototypeOf(Component) !== Function.prototype && !(typeof Component === \"object\" && !Component.render)) || applyReact.catchVueRefs()) {\r\n      return (\r\n          <Component {...props}\r\n                     {...{ \"data-passed-props\": __passedProps }} {...refInfo}>\r\n            {children}\r\n          </Component>\r\n      )\r\n    }\r\n    const newProps = { ...props, ...{ \"data-passed-props\": __passedProps } }\r\n    return <FunctionComponentWrap passedProps={newProps} component={Component} {...refInfo}>{children}</FunctionComponentWrap>\r\n  }\r\n}\r\nexport default function applyReactInVue(component, options = {}) {\r\n  // 兼容esModule\r\n  if (component.__esModule && component.default) {\r\n    component = component.default\r\n  }\r\n  if (options.isSlots) {\r\n    component = component()\r\n  }\r\n  // 处理附加参数\r\n  options = setOptions(options, undefined, true)\r\n  return {\r\n    data() {\r\n      return {\r\n        portals: []\r\n      }\r\n    },\r\n    created() {\r\n      // this.vnodeData = this.$vnode.data\r\n      this.cleanVnodeStyleClass()\r\n      if (this.$root.$options.router) {\r\n        vueRootInfo.router = this.$root.$options.router\r\n      }\r\n      if (this.$root.$options.router) {\r\n        vueRootInfo.store = this.$root.$options.store\r\n      }\r\n    },\r\n    props: [\"dataPassedProps\"],\r\n    render(createElement) {\r\n      this.slotsInit()\r\n      const { style, ...attrs } = options.react.componentWrapAttrs\r\n      return createElement(options.react.componentWrap, { ref: \"react\", attrs, style }, this.portals.map((Portal, index) => Portal(createElement, index)))\r\n    },\r\n    methods: {\r\n      pushVuePortal(vuePortal) {\r\n        this.portals.push(vuePortal)\r\n      },\r\n      // hack!!!! 一定要在render函数李触发，才能激活具名插槽\r\n      slotsInit() {\r\n        Object.keys(this.$slots).forEach((key) => {\r\n          console.log(this.$slots[key])\r\n        })\r\n        Object.keys(this.$scopedSlots).forEach((key) => {\r\n          this.$scopedSlots[key]()\r\n        })\r\n      },\r\n      updateLastVnodeData(vnode) {\r\n        this.lastVnodeData = {\r\n          style: { ...this.formatStyle(vnode.data.style), ...this.formatStyle(vnode.data.staticStyle) },\r\n          class: Array.from(new Set([...this.formatClass(vnode.data.class), ...this.formatClass(vnode.data.staticClass)])).join(' '),\r\n        }\r\n        Object.assign(vnode.data, {\r\n          staticStyle: null,\r\n          style: null,\r\n          staticClass: null,\r\n          class: null,\r\n        })\r\n        return vnode\r\n      },\r\n      // 清除style和class，避免包囊层被污染\r\n      cleanVnodeStyleClass() {\r\n        let vnode = this.$vnode\r\n        this.updateLastVnodeData(vnode)\r\n        // 每次$vnode被修改，将vnode.data中的style、staticStyle、class、staticClass记下来并且清除\r\n        Object.defineProperty(this, '$vnode', {\r\n          get() {\r\n            return vnode\r\n          },\r\n          set: (val) => {\r\n            if (val === vnode) return vnode\r\n            vnode = this.updateLastVnodeData(val)\r\n            return vnode\r\n          }\r\n        })\r\n      },\r\n      toCamelCase(val) {\r\n        const reg = /-(\\w)/g\r\n        return val.replace(reg, ($, $1) => $1.toUpperCase())\r\n      },\r\n      formatStyle(val) {\r\n        if (!val) return {}\r\n        if (typeof val === 'string') {\r\n          val = val.trim()\r\n          return val.split(/\\s*;\\s*/).reduce((prev, cur) => {\r\n            if (!cur) {\r\n              return prev\r\n            }\r\n            cur = cur.split(/\\s*:\\s*/)\r\n            if (cur.length !== 2) return prev\r\n            Object.assign(prev, {\r\n              [this.toCamelCase(cur[0])]: cur[1],\r\n            })\r\n            return prev\r\n          }, {})\r\n        }\r\n        if (typeof val === 'object') {\r\n          const newVal = {}\r\n          Object.keys(val).forEach((v) => {\r\n            newVal[this.toCamelCase(v)] = val[v]\r\n          })\r\n          return newVal\r\n        }\r\n        return {}\r\n      },\r\n      formatClass(val) {\r\n        if (!val) return []\r\n        if (val instanceof Array) return val\r\n        if (typeof val === 'string') {\r\n          val = val.trim()\r\n          return val.split(/\\s+/)\r\n        }\r\n        if (typeof val === 'object') {\r\n          return Object.keys(val).map((v) => (val[v] ? val[v]: ''))\r\n        }\r\n        return []\r\n      },\r\n      // 用多阶函数解决作用域插槽的传递问题\r\n      getScopeSlot(slotFunction) {\r\n        function scopedSlotFunction(createReactSlot) {\r\n          function getSlot(context) {\r\n            if (slotFunction.reactFunction) {\r\n              return slotFunction.reactFunction(context)\r\n            }\r\n            return applyVueInReact(createReactSlot(slotFunction(context)), { ...options, isSlots: true }).render()\r\n          }\r\n          getSlot.vueFunction = slotFunction\r\n          return getSlot\r\n        }\r\n        scopedSlotFunction.__scopedSlot = true\r\n        return scopedSlotFunction\r\n      },\r\n      mountReactComponent(update) {\r\n        // 先提取透传属性\r\n        let {\r\n          on: __passedPropsOn,\r\n          $slots: __passedPropsSlots,\r\n          $scopedSlots: __passedPropsScopedSlots,\r\n          children,\r\n          ...__passedPropsRest\r\n        } = (this.$props.dataPassedProps != null ? this.$props.dataPassedProps : {})\r\n\r\n        // 处理具名插槽，将作为属性被传递\r\n        const normalSlots = {}\r\n        const mergeSlots = { ...__passedPropsSlots, ...this.$slots }\r\n        // 对插槽类型的属性做标记\r\n        for (const i in mergeSlots) {\r\n          normalSlots[i] = mergeSlots[i]\r\n          normalSlots[i].__slot = true\r\n        }\r\n        // 对作用域插槽进行处理\r\n        const scopedSlots = {}\r\n        const mergeScopedSlots = { ...__passedPropsScopedSlots, ...this.$scopedSlots }\r\n        for (const i in mergeScopedSlots) {\r\n          // 过滤普通插槽\r\n          if (normalSlots[i]) {\r\n            // 并且做上标记，vue2.6之后，所有插槽都推荐用作用域，所以之后要转成普通插槽\r\n            if (this.$scopedSlots[i]) {\r\n              this.$scopedSlots[i].__slot = true\r\n            }\r\n            continue\r\n          }\r\n          // 如果发现作用域插槽中有普通插槽的标记，就转成成普通插槽\r\n          if (mergeScopedSlots[i].__slot) {\r\n            normalSlots[i] = mergeScopedSlots[i]()\r\n            normalSlots[i].__slot = true\r\n            continue\r\n          }\r\n          scopedSlots[i] = this.getScopeSlot(mergeScopedSlots[i])\r\n        }\r\n        // 预生成react组件的透传属性\r\n        const __passedProps = {\r\n          ...__passedPropsRest,\r\n          ...{ ...this.$attrs },\r\n          $slots: normalSlots,\r\n          $scopedSlots: scopedSlots,\r\n          children,\r\n          on: { ...__passedPropsOn, ...this.$listeners },\r\n        }\r\n        const lastNormalSlots = { ...normalSlots }\r\n        children = lastNormalSlots.default\r\n        delete lastNormalSlots.default\r\n        // 获取style scoped生成的hash\r\n        const hashMap = {}\r\n        for (let i in this.$el.dataset) {\r\n          if (this.$el.dataset.hasOwnProperty(i) && i.match(/v-[\\da-zA-Z]+/)) {\r\n            hashMap['data-' + i] = ''\r\n          }\r\n        }\r\n        // 如果不传入组件，就作为更新\r\n        if (!update) {\r\n          const Component = createReactContainer(component, options, this)\r\n          let reactRootComponent = <Component\r\n              {...__passedPropsRest}\r\n              {...this.$attrs}\r\n              {...__passedProps.on}\r\n              {...{ children }}\r\n              {...lastNormalSlots}\r\n              {...scopedSlots}\r\n              {...{ \"data-passed-props\": __passedProps }}\r\n              {...(this.lastVnodeData.class ? {className: this.lastVnodeData.class}: {})}\r\n              {...hashMap}\r\n              style={this.lastVnodeData.style}\r\n              ref={(ref) => (this.reactInstance = ref)}\r\n          />\r\n          // 必须通过ReactReduxContext连接context\r\n          if (this.$redux && this.$redux.store && this.$redux.ReactReduxContext) {\r\n            const ReduxContext = this.$redux.ReactReduxContext\r\n            reactRootComponent = <ReduxContext.Provider value={{ store: this.$redux.store }}>{reactRootComponent}</ReduxContext.Provider>\r\n          }\r\n          // 必须异步，等待包囊层的react实例完毕\r\n          this.$nextTick(() => {\r\n            const container = this.$refs.react\r\n            let parentInstance = this.$parent\r\n            let reactWrapperRef\r\n            // 向上查找react包囊层\r\n            while (parentInstance) {\r\n              if (parentInstance.parentReactWrapperRef) {\r\n                reactWrapperRef = parentInstance.parentReactWrapperRef\r\n                break\r\n              }\r\n              if (parentInstance.reactWrapperRef) {\r\n                reactWrapperRef = parentInstance.reactWrapperRef\r\n                break\r\n              }\r\n              parentInstance = parentInstance.$parent\r\n            }\r\n            // 如果存在包囊层，则激活portal\r\n            if (reactWrapperRef) {\r\n              // 存储包囊层引用\r\n              this.parentReactWrapperRef = reactWrapperRef\r\n              // 存储portal引用\r\n              this.reactPortal = () => ReactDOM.createPortal(\r\n                  reactRootComponent,\r\n                  container\r\n              )\r\n              reactWrapperRef.pushReactPortal(this.reactPortal)\r\n              return\r\n            }\r\n            ReactDOM.render(\r\n                reactRootComponent,\r\n                container\r\n            )\r\n          })\r\n        } else {\r\n          // 更新\r\n          // 异步合并更新\r\n          clearTimeout(this.updateTimer)\r\n          this.updateTimer = setTimeout(() => {\r\n            this.reactInstance.setState({\r\n              ...__passedPropsRest,\r\n              ...this.$attrs,\r\n              ...this.$listeners,\r\n              ...{ children },\r\n              ...lastNormalSlots,\r\n              ...scopedSlots,\r\n              ...{ \"data-passed-props\": __passedProps },\r\n              ...(this.lastVnodeData.class ? {className: this.lastVnodeData.class}: {}),\r\n              ...{...hashMap},\r\n              style: this.lastVnodeData.style,\r\n            })\r\n          })\r\n        }\r\n      },\r\n    },\r\n    mounted() {\r\n      clearTimeout(this.updateTimer)\r\n      this.mountReactComponent()\r\n    },\r\n    beforeDestroy() {\r\n      clearTimeout(this.updateTimer)\r\n      // 删除portal\r\n      if (this.reactPortal) {\r\n        const { portals } = this.parentReactWrapperRef.state\r\n        const index = portals.indexOf(this.reactPortal)\r\n        portals.splice(index, 1)\r\n        this.parentReactWrapperRef.vueRef && this.parentReactWrapperRef.setState({ portals })\r\n        return\r\n      }\r\n      // 删除根节点\r\n      ReactDOM.unmountComponentAtNode(this.$refs.react)\r\n    },\r\n    updated() {\r\n      this.mountReactComponent(true)\r\n    },\r\n    inheritAttrs: false,\r\n    watch: {\r\n      $attrs: {\r\n        handler() {\r\n          this.mountReactComponent(true)\r\n        },\r\n        deep: true,\r\n      },\r\n      $listeners: {\r\n        handler() {\r\n          this.mountReactComponent(true)\r\n        },\r\n        deep: true,\r\n      },\r\n      \"$props.dataPassedProps\": {\r\n        handler() {\r\n          this.mountReactComponent(true)\r\n        },\r\n        deep: true,\r\n      },\r\n    },\r\n  }\r\n}\r\n","import Vue from 'vue'\r\nlet reactRouterInfo = {}\r\nfunction applyReactRouterInVue (withRouter) {\r\n  // 只允许调用一次\r\n  if (reactRouterInfo.withRouter) return reactRouterInfo.withRouter\r\n  reactRouterInfo.withRouter = withRouter\r\n  return reactRouterInfo.withRouter\r\n}\r\nexport {\r\n  reactRouterInfo\r\n}\r\nexport function setReactRouterInVue (reactRouter) {\r\n  if (reactRouterInfo.vueInstance) {\r\n    updateReactRouterInVue(reactRouter)\r\n    return\r\n  }\r\n  reactRouterInfo.vueInstance = new Vue({\r\n    data: {\r\n      ...reactRouter\r\n    }\r\n  })\r\n  Vue.prototype.$reactRouter = reactRouterInfo.vueInstance.$data\r\n}\r\nexport function updateReactRouterInVue (reactRouter) {\r\n  Object.assign(reactRouterInfo.vueInstance.$data, { ...reactRouter })\r\n}\r\nexport default applyReactRouterInVue\r\n","import React, {version, useEffect} from 'react'\r\nimport Vue from 'vue'\r\n\r\nimport applyReactInVue from './applyReactInVue'\r\nimport vueRootInfo from './vueRootInfo'\r\nimport { reactRouterInfo, setReactRouterInVue, updateReactRouterInVue } from './applyReactRouterInVue'\r\nimport globalOptions, {setOptions} from './options'\r\nimport ReactDOM from \"react-dom\";\r\nimport {MountingPortal} from 'portal-vue'\r\n\r\nconst unsafePrefix = parseFloat(version) >= 17 ? 'UNSAFE_' : ''\r\nconst optionsName = 'vuereact-combined-options'\r\n\r\nconst REACT_ALL_HANDLERS = new Set(['onClick', 'onContextMenu', 'onDoubleClick', 'onDrag', 'onDragEnd', 'onDragEnter', 'onDragExit', 'onDragLeave', 'onDragOver', 'onDragStart', 'onDrop', 'onMouseDown', 'onMouseEnter', 'onMouseLeave', 'onMouseMove', 'onMouseOut', 'onMouseOver', 'onMouseUp', 'onChange', 'onInput', 'onInvalid', 'onReset', 'onSubmit', 'onError', 'onLoad', 'onPointerDown', 'onPointerMove', 'onPointerUp', 'onPointerCancel', 'onGotPointerCapture', 'onLostPointerCapture', 'onPointerEnter', 'onPointerLeave', 'onPointerOver', 'onPointerOut', 'onSelect', 'onTouchCancel', 'onTouchEnd', 'onTouchMove', 'onTouchStart', 'onScroll', 'onWheel', 'onAbort', 'onCanPlay', 'onCanPlayThrough', 'onDurationChange', 'onEmptied', 'onEncrypted', 'onEnded', 'onError', 'onLoadedData', 'onLoadedMetadata', 'onLoadStart', 'onPause', 'onPlay', 'onPlaying', 'onProgress', 'onRateChange', 'onSeeked', 'onSeeking', 'onStalled', 'onSuspend', 'onTimeUpdate', 'onVolumeChange', 'onWaiting', 'onLoad', 'onError', 'onAnimationStart', 'onAnimationEnd', 'onAnimationIteration', 'onTransitionEnd', 'onToggle'])\r\n\r\n// 根据传入的是否是字符串，判断是否需要获取Vue的全局组件\r\nfunction filterVueComponent (component) {\r\n  if (typeof component === 'string') {\r\n    return Vue.component(component)\r\n  }\r\n  return component\r\n}\r\n// 获取组件选项对象\r\nfunction getOptions (Component) {\r\n  if (typeof Component === 'function') {\r\n    // return new (Component)().$options\r\n    return Component.options\r\n  }\r\n  return Component\r\n}\r\n// 利用多阶组件来获取reactRouter\r\nclass GetReactRouterPropsCom extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    let { history, match, location, forwardRef, ...newProps } = props\r\n    this.state = {\r\n      ...newProps\r\n    }\r\n    // 设置react router属性绑定倒所有的vue的原型上\r\n    setReactRouterInVue({\r\n      history,\r\n      match,\r\n      location\r\n    })\r\n  }\r\n\r\n  [`${unsafePrefix}componentWillReceiveProps`] (nextProps) {\r\n    let { history, match, location } = nextProps\r\n    updateReactRouterInVue({\r\n      history,\r\n      match,\r\n      location\r\n    })\r\n  }\r\n  render () {\r\n    return <VueComponentLoader {...this.state} ref={ this.props.forwardRef } />\r\n  }\r\n}\r\n\r\nconst VueContainer = React.forwardRef((props, ref) => {\r\n  const globalOptions = setOptions(props[optionsName] || {}, undefined, true)\r\n\r\n  // 判断是否获取过reactRouter\r\n  if (reactRouterInfo.withRouter) {\r\n    if (!VueContainer.RouterTargetComponent) {\r\n      VueContainer.RouterTargetComponent = reactRouterInfo.withRouter(GetReactRouterPropsCom)\r\n    }\r\n    // withRouter方法是通过wrappedComponentRef来传递ref的\r\n    return (\r\n        <VueContainer.RouterTargetComponent {...{...props, [optionsName]: globalOptions}} forwardRef={ref} />\r\n    )\r\n  } else {\r\n    return <VueComponentLoader {...{...props, [optionsName]: globalOptions}} ref={ref}/>\r\n  }\r\n})\r\n\r\nexport {\r\n  VueContainer\r\n}\r\nclass VueComponentLoader extends React.Component {\r\n  constructor (props) {\r\n    super(props)\r\n    this.state = {\r\n      portals: []\r\n    }\r\n    // 捕获vue组件\r\n    this.currentVueComponent = filterVueComponent(props.component)\r\n    this.createVueInstance = this.createVueInstance.bind(this)\r\n    this.vueComponentContainer = this.createVueComponentContainer()\r\n  }\r\n\r\n  pushReactPortal (reactPortal) {\r\n    const { portals } = this.state\r\n    portals.push(reactPortal)\r\n    this.setState({ portals })\r\n  }\r\n\r\n  // 这一步变的复杂是要判断插槽和组件的区别，如果是插槽则对wrapper传入原生事件和插槽相关的属性，如果是组件对wrapper不传入原生事件\r\n  createVueComponentContainer () {\r\n    let nativeProps = {}\r\n    const options = this.props[optionsName]\r\n    if (options.isSlots) {\r\n      Object.keys(this.props).forEach((keyName) => {\r\n        if (REACT_ALL_HANDLERS.has(keyName) && typeof this.props[keyName] === 'function') {\r\n          nativeProps[keyName] = this.props[keyName]\r\n        }\r\n      })\r\n      if (options.vue.slotWrapAttrs) {\r\n        nativeProps = {\r\n          ...nativeProps,\r\n          ...options.vue.slotWrapAttrs\r\n        }\r\n      }\r\n    } else {\r\n      if (options.vue.componentWrapAttrs) {\r\n        nativeProps = {\r\n          ...nativeProps,\r\n          ...options.vue.componentWrapAttrs\r\n        }\r\n      }\r\n    }\r\n\r\n    return options.vue.componentWrapHOC(<div ref={this.createVueInstance} />, nativeProps)\r\n  }\r\n\r\n  [`${unsafePrefix}componentWillReceiveProps`] (nextProps) {\r\n    let { component, [optionsName]: options, ...props } = nextProps\r\n    component = filterVueComponent(component)\r\n    if (this.currentVueComponent !== component) {\r\n      this.updateVueComponent(component)\r\n    }\r\n    // Object.assign(this.vueInstance.$data.children, this.doVModel(props).children)\r\n    // 更改vue组件的data\r\n    Object.assign(this.vueInstance.$data, this.doVModel(props))\r\n  }\r\n\r\n  componentWillUnmount () {\r\n    // 删除portal\r\n    if (this.vuePortal) {\r\n      const { portals } = this.parentVueWrapperRef\r\n      const index = portals.indexOf(this.vuePortal)\r\n      portals.splice(index, 1)\r\n      return\r\n    }\r\n    this.vueInstance.$destroy()\r\n  }\r\n\r\n  // 处理v-model\r\n  doVModel (props) {\r\n    let { $model, ...newProps } = props\r\n    if ($model === undefined) return props\r\n    // 考虑到了自定义v-model\r\n    let vueInstanceModelOption = { ...{ prop: 'value', event: 'input' }, ...getOptions(this.currentVueComponent).model }\r\n    let modelProp = { [vueInstanceModelOption.prop]: $model.value }\r\n    // 如果有绑定的事件和v-model事件相同，需合并两个绑定函数\r\n    if (!newProps.on) newProps.on = {}\r\n    if (newProps.on[vueInstanceModelOption.event]) {\r\n      let oldFun = newProps.on[vueInstanceModelOption.event]\r\n      newProps.on[vueInstanceModelOption.event] = function (...args) {\r\n        oldFun.apply(this, args)\r\n        $model.setter && $model.setter.apply(this, args)\r\n      }\r\n    } else {\r\n      newProps.on = { ...newProps.on, ...{ [vueInstanceModelOption.event]: $model.setter || (() => {}) } }\r\n    }\r\n    return { ...newProps, ...modelProp }\r\n  }\r\n\r\n  // 处理sync\r\n  doSync (props) {\r\n    let { $sync, ...newProps } = props\r\n    if ($sync === undefined) return props\r\n    const syncValues = {}\r\n    for (let i in $sync) {\r\n      if (!$sync.hasOwnProperty(i) || !$sync[i] || $sync[i].value == null || $sync[i].setter == null) continue\r\n      syncValues[i] = $sync[i].value\r\n      let syncEvent = 'update:' + i\r\n      // 如果有绑定的事件和sync事件相同，需合并两个绑定函数\r\n      if (!newProps.on) newProps.on = {}\r\n      if (newProps.on[syncEvent]) {\r\n        let oldFun = newProps.on[syncEvent]\r\n        newProps.on[syncEvent] = function (...args) {\r\n          oldFun.apply(this, args)\r\n          $sync[i].setter && $sync[i].setter.apply(this, args)\r\n        }\r\n      } else {\r\n        newProps.on = { ...newProps.on, ...{ [syncEvent]: $sync[i].setter || (() => {}) } }\r\n      }\r\n    }\r\n    return { ...newProps, ...syncValues }\r\n  }\r\n  // 将通过react组件的ref回调方式接收组件的dom对象，并且在class的constructor中已经绑定了上下文\r\n  createVueInstance (targetElement) {\r\n    const VueContainerInstance = this\r\n    let { component, 'data-passed-props': __passedProps = {}, [optionsName]: options, ...props } = this.props\r\n    component = filterVueComponent(component)\r\n    // 过滤vue组件实例化后的$attrs\r\n    let filterAttrs = (props) => {\r\n      // 对mixin进行合并\r\n      let mixinsPropsArray = []\r\n      let mixinsPropsJson = {}\r\n      // 这一步我暂时没有想到更好的方案\r\n      let componentOptions = getOptions(this.currentVueComponent)\r\n      if (componentOptions.mixins) {\r\n        componentOptions.mixins.forEach((v) => {\r\n          if (v.props) {\r\n            if (v.props instanceof Array) {\r\n              mixinsPropsArray = [...v.props]\r\n            } else {\r\n              mixinsPropsJson = { ...v.props }\r\n            }\r\n          }\r\n        })\r\n      }\r\n\r\n      let attrs = Object.assign({}, props)\r\n      let optionProps = componentOptions.props\r\n      if (optionProps) {\r\n        if (optionProps instanceof Array) {\r\n          let tempArr = [...optionProps, ...mixinsPropsArray]\r\n          tempArr.forEach((v) => {\r\n            delete attrs[v]\r\n          })\r\n        } else {\r\n          let tempJson = { ...optionProps, ...mixinsPropsJson }\r\n          for (let i in tempJson) {\r\n            if (!tempJson.hasOwnProperty(i)) continue\r\n            delete attrs[i]\r\n          }\r\n        }\r\n      }\r\n      return attrs\r\n    }\r\n\r\n    // 从作用域插槽中过滤具名插槽\r\n    let filterNamedSlots = (scopedSlots, slots) => {\r\n      if (!scopedSlots) return {}\r\n      if (!slots) return scopedSlots\r\n      for (let i in scopedSlots) {\r\n        if (!scopedSlots.hasOwnProperty(i)) continue\r\n        if (slots[i]) delete scopedSlots[i]\r\n      }\r\n      return scopedSlots\r\n    }\r\n\r\n    function setVueInstance(instance) {\r\n      if (!this.vueInstance) {\r\n        this.vueInstance = instance\r\n      }\r\n    }\r\n    setVueInstance = setVueInstance.bind(this)\r\n    // 将vue组件的inheritAttrs设置为false，以便组件可以顺利拿到任何类型的attrs\r\n    // 这一步不确定是否多余，但是vue默认是true，导致属性如果是函数，又不在props中，会出警告，正常都需要在组件内部自己去设置false\r\n    // component.inheritAttrs = false\r\n    const vueOptionsData = { ...this.doSync(this.doVModel(props)), 'data-passed-props': __passedProps }\r\n    const vueOptions = {\r\n      ...vueRootInfo,\r\n      data() {\r\n        return vueOptionsData\r\n      },\r\n      created() {\r\n        setVueInstance(this)\r\n      },\r\n      methods: {\r\n        // 获取具名插槽\r\n        // 将react组件传入的$slots属性逐个转成vue组件，但是透传的插槽不做处理\r\n        getNamespaceSlots (createElement, $slots) {\r\n          if (!this.getNamespaceSlots.__namespaceSlots) {\r\n            this.getNamespaceSlots.__namespaceSlots = {}\r\n          }\r\n          let tempSlots = Object.assign({}, $slots)\r\n          for (let i in tempSlots) {\r\n            if (!tempSlots.hasOwnProperty(i) || !tempSlots[i]) continue\r\n            tempSlots[i] = ((slot, slotName) => {\r\n              if (slot.vueSlot) {\r\n                return slot.vueSlot\r\n              }\r\n              // 使用单例模式进行缓存，类似getChildren\r\n              let newSlot\r\n              if (!this.getNamespaceSlots.__namespaceSlots[i]) {\r\n                newSlot = [createElement(applyReactInVue(() => slot, { ...options, isSlots: true }), { slot: slotName })]\r\n                this.getNamespaceSlots.__namespaceSlots[i] = newSlot\r\n              } else {\r\n                newSlot = this.getNamespaceSlots.__namespaceSlots[i]\r\n                // 触发通信层更新fiberNode\r\n                if (newSlot[0].child.reactInstance) {\r\n                  newSlot[0].child.reactInstance.setState({ children: slot })\r\n                } else {\r\n                  this.$nextTick(() => {\r\n                    newSlot[0].child.reactInstance.setState({ children: slot })\r\n                  })\r\n                }\r\n              }\r\n              newSlot.reactSlot = slot\r\n              return newSlot\r\n            })(tempSlots[i], i)\r\n          }\r\n          return tempSlots\r\n        },\r\n        // 获取作用域插槽\r\n        // 将react组件传入的$scopedSlots属性逐个转成vue组件\r\n        getScopedSlots (createElement, $scopedSlots) {\r\n          if (!this.getScopedSlots.__scopeSlots) {\r\n            this.getScopedSlots.__scopeSlots = {}\r\n          }\r\n          const tempScopedSlots = { ...$scopedSlots }\r\n          for (let i in tempScopedSlots) {\r\n            if (!tempScopedSlots.hasOwnProperty(i)) continue\r\n            let reactFunction = tempScopedSlots[i]\r\n            tempScopedSlots[i] = ((scopedSlot) => {\r\n              return (context) => {\r\n                if (scopedSlot.vueFunction) {\r\n                  return scopedSlot.vueFunction(context)\r\n                }\r\n                // 使用单例模式进行缓存，类似getChildren\r\n                let newSlot\r\n                if (!this.getScopedSlots.__scopeSlots[i]) {\r\n                  newSlot = createElement(applyReactInVue(() => scopedSlot(context), { ...options, isSlots: true }))\r\n                  this.getScopedSlots.__scopeSlots[i] = newSlot\r\n                } else {\r\n                  newSlot = this.getScopedSlots.__scopeSlots[i]\r\n                  // 触发通信层更新fiberNode\r\n                  if (newSlot.child.reactInstance) {\r\n                    newSlot.child.reactInstance.setState({ children: scopedSlot(context) })\r\n                  } else {\r\n                    this.$nextTick(() => {\r\n                      newSlot.child.reactInstance.setState({ children: scopedSlot(context) })\r\n                    })\r\n                  }\r\n                }\r\n                return newSlot\r\n              }\r\n            })(reactFunction)\r\n            tempScopedSlots[i].reactFunction = reactFunction\r\n          }\r\n          return tempScopedSlots\r\n        },\r\n        // 获取插槽整体数据\r\n        // children是react jsx的插槽，需要使用applyReactInVue转换成vue的组件选项对象\r\n        // 转化规则是单例原则，转换的vnode是用于react插槽的，vnode只是作为容器存在，恒久不变，除非chidren为空就则不返回vnode，容器将销毁\r\n        // vnode容器恒久保持只有一个子元素，children更新时，直接对子元素浅更新，（浅更新其实可以省略），因为真正操作react fiberNode更新是reactInstance.setState\r\n        // 在applyReactInVue中的通信层react实力会保存react插槽的children到state，获取通信层更定为vnode.child.reactInstance\r\n        getChildren (createElement, children) {\r\n          // 这里要做判断，否则没有普通插槽传入，vue组件又设置了slot，会报错\r\n          if (children != null) {\r\n            if (children.vueSlot) {\r\n              return children.vueSlot\r\n            }\r\n            let newSlot\r\n            if (!this.getChildren.__vnode) {\r\n              newSlot = [createElement(applyReactInVue(() => children, { ...options, isSlots: true }))]\r\n              this.getChildren.__vnode = newSlot\r\n            } else {\r\n              // 此步vnode的浅更新可以省略\r\n              // Object.assign(this.getChildren.__vnode[0], createElement(applyReactInVue(() => children, {...options, isSlots: true})))\r\n              newSlot = this.getChildren.__vnode\r\n              // 直接修改react的fiberNode，此过程vnode无感知，此方案只是临时\r\n              if (newSlot[0].child.reactInstance) {\r\n                newSlot[0].child.reactInstance.setState({ children })\r\n              } else {\r\n                this.$nextTick(() => {\r\n                  newSlot[0].child.reactInstance.setState({ children })\r\n                })\r\n              }\r\n            }\r\n            newSlot.reactSlot = children\r\n            return newSlot\r\n          }\r\n        }\r\n      },\r\n      mounted () {\r\n        // 在react包囊实例中，使用vueRef保存vue的目标组件实例\r\n        VueContainerInstance.vueRef = this.$children[0]\r\n        // 在vue的目标组件实例中，使用reactWrapperRef保存react包囊实例，vue组件可以通过这个属性来判断是否被包囊使用\r\n        this.$children[0].reactWrapperRef = VueContainerInstance\r\n      },\r\n      beforeDestroy () {\r\n        // 垃圾回收\r\n        VueContainerInstance.vueRef = null\r\n        this.$children[0].reactWrapperRef = null\r\n      },\r\n      render (createElement) {\r\n        // 这里很重要，将不是属性的内容过滤掉，并单独抽取\r\n        let { component,\r\n          on,\r\n          $slots,\r\n          $scopedSlots,\r\n          children,\r\n          'class': className = '',\r\n          style = '',\r\n          'data-passed-props': {\r\n            $slots: __passedPropsSlots,\r\n            $scopedSlots: __passedPropsScopedSlots,\r\n            children: __passedPropsChildren,\r\n            on: __passedPropsOn,\r\n            ...__passedPropsRest\r\n          }, ...props } = this.$data\r\n        filterNamedSlots(__passedPropsScopedSlots, __passedPropsSlots)\r\n        // 作用域插槽的处理\r\n        const scopedSlots = this.getScopedSlots(createElement, { ...__passedPropsScopedSlots, ...$scopedSlots })\r\n        const lastChildren = this.getChildren(createElement, this.children || __passedPropsChildren)\r\n        // 获取插槽数据（包含了具名插槽）\r\n        const namedSlots = this.getNamespaceSlots(createElement, { ...__passedPropsSlots, ...$slots })\r\n        if (lastChildren) namedSlots.default = lastChildren\r\n        const lastSlots = [\r\n          (lastChildren || []),\r\n          ...Object.keys(namedSlots).map((key) => {\r\n            if (key === 'default') {\r\n              return\r\n            }\r\n            return namedSlots[key]\r\n          })\r\n        ]\r\n        const lastOn = { ...__passedPropsOn, ...on }\r\n        const nativeOn = {}\r\n\r\n        // 解决原生事件\r\n        Object.keys(props).forEach((keyName) => {\r\n          if (REACT_ALL_HANDLERS.has(keyName) && typeof props[keyName] === 'function') {\r\n            nativeOn[keyName.replace(/^on/, '').toLowerCase()] = props[keyName]\r\n            delete props[keyName]\r\n          }\r\n        })\r\n\r\n        let lastProps = {\r\n          ...__passedPropsRest,\r\n          ...props,\r\n          // 封装透传属性\r\n          'data-passed-props': {\r\n            ...__passedPropsRest,\r\n            ...props,\r\n            on: lastOn,\r\n            children: lastChildren,\r\n            $slots: namedSlots,\r\n            $scopedSlots: scopedSlots\r\n          }\r\n        }\r\n\r\n        // 手动把props丛attrs中去除，\r\n        // 这一步有点繁琐，但是又必须得处理\r\n        const attrs = filterAttrs({ ...lastProps })\r\n        return createElement(\r\n            'use_vue_wrapper',\r\n            {\r\n              props: lastProps,\r\n              on: lastOn,\r\n              nativeOn,\r\n              attrs,\r\n              'class': className,\r\n              style,\r\n              scopedSlots: { ...scopedSlots }\r\n            },\r\n            lastSlots\r\n        )\r\n      },\r\n      components: {\r\n        'use_vue_wrapper': component\r\n      }\r\n    }\r\n\r\n    if (!targetElement) return\r\n\r\n    Vue.nextTick(() => {\r\n      const targetId = '__vue_wrapper_container_' + (Math.random() + '').substr(2)\r\n      targetElement.id = targetId\r\n      // 获取react的fiber实例\r\n      const fiberNode = this._reactInternals || this._reactInternalFiber\r\n      let parentInstance = fiberNode.return\r\n      let vueWrapperRef\r\n      // 向上查找react包囊层\r\n      while (parentInstance) {\r\n        if (parentInstance.stateNode?.parentVueWrapperRef) {\r\n          vueWrapperRef = parentInstance.stateNode.parentVueWrapperRef\r\n          break\r\n        }\r\n        if (parentInstance.stateNode?.vueWrapperRef) {\r\n          vueWrapperRef = parentInstance.stateNode.vueWrapperRef\r\n          break\r\n        }\r\n        parentInstance = parentInstance.return\r\n      }\r\n      // 如果存在包囊层，则激活portal\r\n      if (vueWrapperRef) {\r\n        // 存储包囊层引用\r\n        this.parentVueWrapperRef = vueWrapperRef\r\n        // 存储portal引用\r\n        this.vuePortal = (createElement, key) => createElement(MountingPortal, {props: {mountTo: '#' + targetId, slim:true, targetSlim: true}, key}, [createElement(vueOptions)])\r\n        vueWrapperRef.pushVuePortal(this.vuePortal)\r\n        return\r\n      }\r\n\r\n\r\n      // 创建vue实例\r\n      this.vueInstance = new Vue({...vueOptions, el: targetElement})\r\n    })\r\n\r\n  }\r\n\r\n  updateVueComponent (nextComponent) {\r\n    this.currentVueComponent = nextComponent\r\n\r\n    // 使用$forceUpdate强制重新渲染vue实例，因为此方法只会重新渲染当前实例和插槽，不会重新渲染子组件，所以不会造成性能问题\r\n    // $options.components包含了vue实例中所对应的组件序列, $option是只读,但是确实可以修改components属性,依靠此实现了动态组件替换\r\n    if (nextComponent.__fromReactSlot) {\r\n      // 如果是来自react的slot，就强行通过修改vue组件构造器的use_vue_wrapper的缓存\r\n      Object.assign(this.vueInstance.$options.components.use_vue_wrapper._Ctor[0].options, nextComponent)\r\n    } else {\r\n      // 如果是标准的vue组件，则整个替换use_vue_wrapper为新的组件\r\n      this.vueInstance.$options.components.use_vue_wrapper = nextComponent\r\n    }\r\n    this.vueInstance.$forceUpdate()\r\n  }\r\n\r\n  render () {\r\n    return <this.vueComponentContainer portals={this.state.portals}/>\r\n  }\r\n}\r\n\r\nexport default function applyVueInReact (component, options = {}) {\r\n\r\n  if (!component) {\r\n    console.warn('Component must be passed in applyVueInReact!')\r\n  }\r\n\r\n  // 兼容esModule\r\n  if (component.__esModule && component.default) {\r\n    component = component.default\r\n  }\r\n\r\n  // // 使用React.forwardRef之后，组件不再是函数组件，如果使用applyVueInReact处理插槽vue的插槽，需要直接调用返回对象的render方法\r\n  return React.forwardRef((props, ref) => {\r\n    return <VueContainer {...props} component={component} ref={ref} {...{[optionsName]: options}}/>\r\n  })\r\n}\r\n","import lazyVueInReact from './lazyVueInReact'\r\nimport lazyReactInVue from './lazyReactInVue'\r\nimport applyReactInVue from './applyReactInVue'\r\nimport applyVueInReact, { VueContainer } from './applyVueInReact'\r\nimport applyRedux from './applyRedux'\r\nimport applyVuex, { connectVuex } from './applyVuex'\r\nimport withVueRouter from './withVueRouter'\r\nimport vueRootInfo from './vueRootInfo'\r\nimport applyReactRouterInVue from './applyReactRouterInVue'\r\n// import './cleanStyle'\r\n// 兼容旧的方法名(因为旧的方法名中的use与react hook有冲突)\r\nconst useReactInVue = applyReactInVue\r\nconst useVueInReact = applyVueInReact\r\nconst useRedux = applyRedux\r\nconst useVuex = applyVuex\r\nexport {\r\n  lazyVueInReact,\r\n  lazyReactInVue,\r\n  applyReactInVue,\r\n  applyVueInReact,\r\n  VueContainer,\r\n  applyRedux,\r\n  applyVuex,\r\n  connectVuex,\r\n  useReactInVue,\r\n  useVueInReact,\r\n  useRedux,\r\n  useVuex,\r\n  withVueRouter,\r\n  vueRootInfo,\r\n  applyReactRouterInVue\r\n}\r\n","import { lazy } from 'react'\r\nimport applyVueInReact from './applyVueInReact'\r\nexport default function lazyVueInReact (asyncImport) {\r\n  return lazy(() => asyncImport().then((mod) => {\r\n    return { default: applyVueInReact(mod.default) }\r\n  }))\r\n}\r\n","import React, { lazy, Suspense } from \"react\"\r\nimport { lazyVueInReact } from '../vuereact-combined'\r\nconst Home = lazy(() => import(\"../views/Home\"))\r\nconst VueInReact1 = lazy(() => import(\"../demo/VueInReact1\"))\r\nconst VueInReact2 = lazy(() => import(\"../demo/VueInReact2\"))\r\nconst EleInReact = lazy(() => import(\"../demo/EleInReact\"))\r\nconst HelloWorld = lazy(() => import(\"../demo/demo1\"))\r\n//懒加载vue组件\r\nconst TestVue = lazyVueInReact(()=>import(\"../vue_app/test1.vue\"))\r\n\r\n\r\nexport default [\r\n    {\r\n        path: \"/\",\r\n        exact: true,\r\n        component: () => {\r\n            return (\r\n                <Suspense fallback={<div>Loading...</div>}>\r\n                    <Home/>\r\n                </Suspense>\r\n            );\r\n        }\r\n    },\r\n    {\r\n        path: \"/vueInReact1\",\r\n        exact: true,\r\n        component: () => {\r\n            return (\r\n                <Suspense fallback={<div>Loading...</div>}>\r\n                    <VueInReact1/>\r\n                </Suspense>\r\n            );\r\n        }\r\n    },\r\n    {\r\n        path: \"/vueInReact2\",\r\n        exact: true,\r\n        component: () => {\r\n            return (\r\n                <Suspense fallback={<div>Loading...</div>}>\r\n                    <VueInReact2/>\r\n                </Suspense>\r\n            );\r\n        }\r\n    },\r\n    {\r\n        path: \"/eleInReact\",\r\n        exact: true,\r\n        component: () => {\r\n            return (\r\n                <Suspense fallback={<div>Loading...</div>}>\r\n                    <EleInReact/>\r\n                </Suspense>\r\n            );\r\n        }\r\n    },\r\n    {\r\n        path: \"/helloworld\",\r\n        exact: true,\r\n        component: () => {\r\n            return (\r\n                <Suspense fallback={<div>Loading...</div>}>\r\n                    <HelloWorld wrappedComponentRef={(ref)=>{console.log(111111,ref)}}/>\r\n                </Suspense>\r\n            );\r\n        }\r\n    }\r\n];\r\n","import React from 'react';\r\nimport './App.css';\r\nimport { renderRoutes } from 'react-router-config'\r\nimport { HashRouter, Link, withRouter } from 'react-router-dom'\r\nimport routers from './router'\r\nimport {applyReactRouterInVue} from 'vuereact-combined'\r\napplyReactRouterInVue(withRouter)\r\n\r\nfunction App() {\r\n  return (\r\n      <HashRouter>\r\n        <div className=\"App\">\r\n          <header className=\"App-header\">\r\n            <div>\r\n                <Link to=\"/\">Home</Link> |&nbsp;\r\n              <Link to=\"/vueInReact1\">在react组件中引用vue组件</Link> |&nbsp;\r\n              <Link to=\"/vueInReact2\">在react组件中引用vue组件(advanced)</Link> |&nbsp;\r\n                <Link to=\"/eleInReact\">在react组件中使用vue的element-ui复杂demo</Link>\r\n            </div>\r\n            {renderRoutes(routers)}\r\n          </header>\r\n        </div>\r\n      </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}